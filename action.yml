name: "Auto Release"
description: "Create a release automatically"

inputs:
  personal_access_token:
    description: "Github Personal access token"
    required: true

  version-file:
    description: "File were the version is"
    required: false

runs:
  using: "docker"
  image: "Dockerfile"

#  steps:
#    - uses: actions/checkout@v2
#
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v2
#      with:
#        python-version: ${{ matrix.python-version }}
#
#    - name: Cache pip
#      uses: actions/cache@v2
#      with:
#        # This path is specific to Ubuntu
#        path: ~/.cache/pip
#        # Look to see if there is a cache hit for the corresponding requirements file
#        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
#        restore-keys: |
#          ${{ runner.os }}-pip-
#          ${{ runner.os }}-
#
#    - name: Install dependencies
#      run: |
#        function act { echo "::group::$1"; shift; echo + "$@"; "$@"; echo ::endgroup::; }
#        act "Install pip" python -m pip install --upgrade pip
#        act "Install flake8" pip install flake8 pytest coveralls
#        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#      shell: bash
#
#    - name: Lint with flake8
#      run: flake8 . --count --select=E9,F63,F7,F82 --max-complexity=10 --max-line-length=127 --show-source --statistics
#      shell: bash
#
#    - name: Run before Test
#      run: ${{ inputs.run-before-test }}
#      shell: bash
#
#    - name: pytest-cov
#      uses: lpenz/ghaction-pytest-cov@v1
#
#    - name: Send to Coverall
#      if: inputs.send-to-coveralls == 'true'
#      run: COVERALLS_REPO_TOKEN=${{ inputs.coveralls-token }} coveralls
#      shell: bash
